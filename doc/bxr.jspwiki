!!!Free and Open source Russia Buriat analyser giella-bxr

;Authors: Divvun and Giellatekno teams, community members
;Software version: 2012
;Documentation license: GNU GFDL
;SVN Revision: $Revision: 68217 $
;SVN Date: $Date: 2013-01-16 11:31:33 +0200 (Wed, 16 Jan 2013) $

!!!giella-bxr

This is free and open source Russia Buriat morphology.

           !!!Buryaad morphological analyser                      !
INTRODUCTION TO MORPHOLOGICAL ANALYSER OF BURYAAD.

 !!!Definitions for Multichar_Symbols

 * +N	      Noun 
 * +V	      Verb
 * +A	      Adjective
 * +Adv      Adverb
 * +Pcle      Particles (Probably adverbs, look into this)
 * +CC	      Conjunction
 * +CS	      Subjunction
 * +Interj   Interjection
 * +Pron     Pronoun
 * +Prop     Propernoun
 * +Num      Numaral
 * +Det      Determiner (Demonstrative?)

 * +Prs     Present
 * +Fut     Future
 * +Prt     Preterite
 * +Prf     Perfect
 * +Ind     Indicative
 * +Imp     Imperative
 * +Cond    Conditional
 * +Opt     Optative
 * +Vol     Voluntative
 * +Dur     Durative
 * +Term     Terminative
 * +Conf     Conf

 * +Sg1     first person singular
 * +Sg2     second person singular
 * +Sg3     third person singular
 * +Pl1     first person plural
 * +Pl2     second person plural
 * +Pl3     third person plural

 * +Inf     Infinitive
 * +Pos     Positive
 * +Neg     Negative

 * +TV     Transitive
 * +IV      Intransitive

 * +Pl      Plural

 * +Nom     Nominative
 * +Acc     Accusative
 * +Gen     Genitive
 * +Abl     Ablative
 * +Dat     Dative
 * +Ins     Instrumental
 * +Com     Comitative
 * +Ord     Ordinal
 * +Presc    Prescriptive mood

 * +AgPrc   
 * +AgConstPrc   
 * +DualPrc      
 * +FutPrc	      
 * +HabPrc	      
 * +ImpfPrc      
 * +PassPrc      
 * +PerfPrc      
 * +PotPrc	      
 * +PrsPrc	      
 * +ResPrc	      

 * +ConMod    
 * +ConImpf    
 * +ConPrf    
 * +ConCond    
 * +ConConc    
 * +ConTerm    
 * +ConCntmp    
 * +ConAbtmp    
 * +ConFin    
 * +ConIntnt    
 * +ConSucc    
 * +ConCmp    


 * +PxSg1   first person singular possessive
 * +PxSg2   second person singular possessive
 * +PxSg3   third person singular possessive
 * +PxPl1   first person plural possessive
 * +PxPl2   second person plural possessive
 * +PxPl3   third person plural possessive
 * +Px3   third person plural possessive

 * %{A%}   letter class 
 * %{D%}   letter class 
 * %{G%}   letter class 
 * %{I%}   letter class 
 * %{J%}   letter class 
 * %{U%}   letter class 
 * %{V%}   letter class 
 * %{Ө%}   letter class 
 * %{Y%}   kept after Cns, deleted after Vow



 * а2 я2  these are а and я in Russian loanwords that do not weaken to ых

 * %^END   we do the mhr trick to harmonise twolc and lexc

!!Usage tags

 * +Use/NG   Do not generate 


!!Flag diacritics
We have manually optimised the structure of our lexicon using following
flag diacritics to restrict morhpological combinatorics - only allow compounds
with verbs if the verb is further derived into a noun again:
 | @P.NeedNoun.ON@ | (Dis)allow compounds with verbs unless nominalised
 | @D.NeedNoun.ON@ | (Dis)allow compounds with verbs unless nominalised
 | @C.NeedNoun@ | (Dis)allow compounds with verbs unless nominalised

For languages that allow compounding, the following flag diacritics are needed
to control position-based compounding restrictions for nominals. Their use is
handled automatically if combined with +CmpN/xxx tags. If not used, they will
do no harm.
 | @P.CmpFrst.FALSE@ | Require that words tagged as such only appear first
 | @D.CmpPref.TRUE@ | Block such words from entering ENDLEX
 | @P.CmpPref.FALSE@ | Block these words from making further compounds
 | @D.CmpLast.TRUE@ | Block such words from entering R
 | @D.CmpNone.TRUE@ | Combines with the next tag to prohibit compounding
 | @U.CmpNone.FALSE@ | Combines with the prev tag to prohibit compounding
 | @P.CmpOnly.TRUE@ | Sets a flag to indicate that the word has passed R
 | @D.CmpOnly.FALSE@ | Disallow words coming directly from root.

Use the following flag diacritics to control downcasing of derived proper
nouns (e.g. Finnish Pariisi -> pariisilainen). See e.g. North Sámi for how to use
these flags. There exists a ready-made regex that will do the actual down-casing
given the proper use of these flags.
 | @U.Cap.Obl@ | Allowing downcasing of derived names: deatnulasj.
 | @U.Cap.Opt@ | Allowing downcasing of derived names: deatnulasj.

Key lexicon

 __LEXICON Root __ is where it all starts, with these lexica:

 * Noun ;				   
 * urj-Cyrl-ProperNouns ; 
 * bxr-Propernouns ;	   
 * Verb ;				   
 * Adjective ;			   
 * Adverb ;			   
 * Subjunction ;		   
 * Interjection ;		   
 * Pronoun ;			   
 * Propernoun ;			   
 * Postposition ;		    
 * Particles ;		    , these should rather be adverbs
 * Punctuation ;		    
 * Conjunction ;		    
 * Numeral ;		    

!!!Buryaad morphophonology

This file expresses Buryaad morphophonological alternation, from abstract underlying forms.

!!!Alphabet

This is a list of all symbols in use.


 * А Б В Г Д Е Ё Ж З И Й К Л М Н О    
   Ө П Р С Т У Ү Ф Х Һ Ц Ч Ш Щ Ь Ы     
   Ъ Э Ю Я							   = Capital letters
 * а б в г д е ё ж з и й к л м н о    
   ө п р с т у ү ф х һ ц ч ш щ ь ы   
   ъ э ю я							   = Small letters
 * %{A%}:а %{A%}:о %{A%}:э			   = archivowel A
 * %{A%}:я %{A%}:ё %{A%}:е			   = archivowel A
 * %{U%}:у %{U%}:ү  				   = archivowel U
 * %{Ө%}:а %{Ө%}:о %{Ө%}:э %{Ө%}:ө	   = archivowel Ө 
 * %{I%}:и %{I%}:ы %{I%}:0			   = archivowel I
 * %{Y%}:и %{Y%}:0               = archivowel Y, kept after Cns, deleted after Vow
 * %{D%}:т %{D%}:д					   = arciconsonant D

 * %> 		         = suffix border
 * а2:а я2:я        = invariant а/я in loanwords
 * %^END:0	         = auxiliary end symbol to fix xerox bug

!!!Sets

Some of the symbols are bundled together in sets

 * RealVow =  А Е Ё И О Ө У Ү Ы Э Ю Я			   
              а е ё и о ө у ү ы э ю я ;		   
 * ArchiVow = а2 %{A%} %{U%} %{Ө%} %{I%} %{Y%} ;  
 * RealCns =  Б В Г Д Ж З Й К Л М Н П Р С Т	   
              Ф Х Һ Ц Ч Ш Щ Ь Ъ				   
              б в г д ж з й к л м н п р с т	   
              ф х һ ц ч ш щ ь ъ ;				   
 * ArchiCns = %{D%} ;							   

 * Vow = RealVow ArchiVow ;   
 * Cns = RealCns ArchiCns ;   
 * Sgm = Vow Cns ;			   


!!!Rules

Here come all the rules (marked with RULE:), and test cases.


!!Vowel harmony
!Vowel harmony for short vowels

* RULE:  __Vowel harmony A:а__ gives a after stems with a or juu

* __басаган>г{A}й __
* __басаган>0ай __

* __бари>х{A}л{A}{A}р __
* __бари>халаар __

* RULE:  __Vowel harmony A:o__ gives o after stems with o or jo
* __самолёт>{D}{A}^END __
* __самолёд>то0 __

* RULE:  __Vowel harmony A:э__ gives e after e etc

* __басаган>г{A}й __
* __басаган>0ай __

* __бэелэ>х{A}^END __
* __бэел0>хэ0 __

* RULE:  __Vowel harmony A:я__ gives я after stems with a or juu

* __хара>х{A}й{A}{A} __
* __хара>ха0яа __
* __бари>х{A}й{A}{A} __
* __бари>ха0яа __

* RULE:  __Vowel harmony A:ё__ gives ё after stems with o or jo

* __самолёт>{D}{A}^END __
* __самолёд>то0 __

* RULE:  __Vowel harmony A:е__ gives е after e etc and preceeding 

* RULE:  __Vowel harmony й:0__ deletes й in front of A


* RULE:  __Vowel harmony U:у__ gives a after stems with a or juu


* RULE:  __Vowel harmony U:ү__ gives e after e etc



!Vowel harmony for long vowels

* RULE:  __Vowel harmony ӨӨ:аa__ gives aa after a

* __анг>һ{Ө}{Ө}^END __
* __анг>һаа0 __

* __аха>һ{Ө}{Ө}^END __
* __аха>һаа0 __

* RULE:  __Vowel harmony ӨӨ:оо__ gives oo after o

* RULE:  __Vowel harmony ӨӨ:ээ__ gives ee after e

* RULE:  __Vowel harmony ӨӨ:өө__ gives ø after ø



!Realisation of I as ы and и

* RULE:  __{I}{I} to ы in Gen/Acc and Poss 1__ gives y for the first I

* RULE:  __{I}{I} to ы in Gen/Acc and Poss 2__ deletes the second I


* __Байгал>{I}{I}нь^END __
* __Байгал>ы0нь0 __

* __аба>{I}{I}нь^END __
* __аба>00нь0 __

* __аба>{I}{I}е^END __
* __аб0>ы0е0 __

* RULE:  __{I}{I} to ии in Gen/Acc and Poss__ changes both I to i

* __морин>{I}{I}нь^END __
* __морин>иинь0 __




!!Other vowel rules
!Vowel deletion rules

* RULE:  __Final stem vowel deletion before ые and ын__ 

* __аха>{A}{A}р^END __
* __ах0>аар0 __

* RULE:  __Deletion of и in word-final иие and Deletion SHV and Vowel harmony и:0__ 

* __бари>{A}{A} __ {{= }} (Eng. twolc upper:lower b:c)
* __бар0яа __


* RULE:  __Deletion of ы in -ые for aj and VV stems__ 

* RULE:  __Deletion of Y in predicative particle -b for vowel stem__ 

* __би>б{Y}^END __
* __би>б00 __

!Vowel change rules

* RULE:  __Y to i in predicative particle -bi for consonant stem__ 

* __тэдэнэр>б{Y}^END __
* __тэдэнэр>би0 __

!!Consonant rules
!Consonant change rules

* RULE:  __D to t suffix initially for VC stems__ 

* __сэсэг>{D}{A}^END __
* __сэсэг>тэ0 __

* RULE:  __D to d after n i l  __ 



* RULE:  __Final consonant ptd voicing to bdg in loanwords__ 

* __самолёт>{A}й^END __
* __самолёд>ой0 __


!Consonant deletion rules

* RULE:  __Deletion of possessive m for consonant stems__ 

* RULE:  __Deletion of n before m in possessive and before gAAr__ 

* __һанаан>{I}{I}е^END __
* __һанаа0>ы0е0 __




* RULE:  __Deletion of g in word-final ng and before gaj and haa__ 


* __анг>{D}{A}^END __
* __ан0>да0 __

* __анг>һ{Ө}{Ө}^END __
* __анг>һаа0 __

* __ури>н{A}>б __
* __ури>на>б __

* __амила>х{A}^END __
* __амил0>ха0 __

* __боли>х{A}^END __
* __боли>хо0 __

* __дохи>х{A}^END __
* __дохи>хо0 __

* __зори>х{A}^END __
* __зори>хо0 __

* __орхи>х{A}^END __
* __орхи>хо0 __

* __долгил>х{A}^END __
* __долгил>хо0 __

* __хушажархи>х{A}^END __
* __хушажархи>ха0 __

* __орило>х{A}^END __
* __орил0>хо0 __

* __доһоло>х{A}^END __
* __доһол0>хо0 __

* __гэршэлэ>х{A}^END __
* __гэршэл0>хэ0 __

* __һуу>х{A}й{A}{A} __
* __һуу>ха0яа __















!!Buryaad clitics

This file contains the clitic lexicon K, pointing (via clitics) to ENDLEX

 * __LEXICON K  __ , in principle containing clitics, but no one so far, and pointing to ENDLEX


 * __LEXICON ENDLEX __ is the lexicon adding ^END, for technical reasons.

!!!Buryaad noun stems

 * __LEXICON Noun __ the lexicon itself

There are some names here, they should eventually
be moved to bxr-propernouns.lexc










!!!Buryaad noun affixes

We have two lexica, n1 and n2, 
n1 with -нар plural and V-initial Gen, Ins, and
n2 with -ууд plural and г-initial Gen, Ins

The noun classes

 * __LEXICON nx __ unclassified nouns, to n2 for now

 * __LEXICON n1 __ with Gen -IIN, and -нар- suffix for oblique cases

 * __LEXICON n2 __ with Gen -GAj and -ууд suffič for oblique cases

The class-specific case morphology (Gen, Ins)
 * __LEXICON case1 __ Gen, Ins for n1 nouns, and pointing to common cases

 * __LEXICON case2 __ Gen, Ins for n2 nouns, and pointing to common cases

 * __LEXICON case3 __ case3 are numerals, for now pointing to case2

The morphology common to the different stem classes

 * __LEXICON commoncase  __ common treatment of Nom, Dat, Acc, Abl, Com for all nouns

 * __LEXICON Poss __ for Px, common for all nouns
!!!Buryaad adjectives

here there are some 500 adjectives from the Apertium source files.


!!!Buryaad postpositions

This file contains 40 postpositions

 LEXICON pp  = These are the indeclieable ones , tag +Po

 LEXICON Postposition   = The lexicon
 * болон pp "until" ;   
 * болотор pp "until" ;   
 * гадна pp "besides" ;  ... 

!!!Buryaad adverbs

Here follows a lost of some 20 adverbs.



!!!Buryaad conjunctions

This file is still empty.







!!!Buryaad interjections

This file is still empty.


!!!Buryaad pronouns

This file contains pronouns.

So far, the following pronouns are covered:

LEXICON Pronoun   * __@CODE*__

Personal ;           ** __@CODE*__





























!!!Buryaad proper nouns

This file is still empty.

It will eventually contain Buryaad-specific names. General Russian
and international names will be taken from the urj-Cyrl file.




!!!Punctuation for Buryaad


!!Clause boundary symbols

 *    %,+CLB:%,     # ;  
 *    %.+CLB:%.     # ;  
 *  %.%.+CLB:%.%.   # ;  

!!Single punctuation marks

 *  •+PUNCT:•   # ;  
 *  ●+PUNCT:●   # ;  
 *  ·+PUNCT:·   # ;  

!!Paired punctuation marks

 *  «+PUNCT+LEFT:«     # ; 
 *  »+PUNCT+RIGHT:»    # ; 

!!!Buryaad subjunctions

This file is still empty.


!!!Buryaad verbs

This file is almost empty, it contains ca 40 verbs of 3 types, v1, v2, v3:

 * LEXICON Verb 

Verbs marked aux may perhaps be changed to v1, ...

It is unclear whether the distinction is morphologically relevant.

Also, some of the aux-es may have wrong baseform.
 ** хүрэхэ:хүрэ v1 "reach" ; 
 ** һууха:һуу v2 "sit" ; 

Here come the new verbs
!!!Buryaad proper noun morphology

This file add +N+Prop and points to the noun case morphology



!!!Buryaad verb affixes

This is the file for Buryaad verb morphology. The documentation
shortly explains the rationale behind each continuation lexicon.


!!The verb classes

!Auxiliary verbs

No auxiliary verbs for now.

!Ordinary verbs

v1 the default verb category, v2 stem in long vowel or ditphtong, 
v3 stem in и
The difference comes for the non-indicative forms, thus
all verb types point to the same finite_indicative.

 * LEXICON v1t  the transitive v1 verbs (add +TV and go on)

 * LEXICON v1i  the intransitive v1 verbs (add +IV and go on)

 * LEXICON v1  the v1 verbs not yet classified for transitivity

 * LEXICON v2t  the transitive v2 verbs (add +TV and go on)

 * LEXICON v2i  the intransitive v2 verbs (add +IV and go on)

 * __LEXICON v2 __ stem in long vowel or diphthong

 * LEXICON v3t  the transitive v3 verbs (add +TV and go on)

 * LEXICON v3i  the intransitive v3 verbs (add +IV and go on)


 * __LEXICON v3 __ stem in и

!!Verb morphology
We see the contlexes as two layers: The first layer to divide
the different stem types into different suffix lexica, and
the one for these suffixes.

!Layer one: Dividing v1, v2, v3 into suffix lexica


 * __LEXICON v1lex __ the common v1 morphology

 * __LEXICON v2lex __ the common v2 morphology



!Layer two: The suffix lexica themselves.

 * __LEXICON persprd  __ for suffixes: б, ш, ...

 * __LEXICON persprd2  __ for suffixes: би, ши, ...


 * __LEXICON imperative   __ for imperative suffixes (Sg2, Pl2)

 * __LEXICON voluntative   __ for suffixes: яа, 0, ...

 * __LEXICON optative   __ for suffixes: -һууб, ...

 * __LEXICON presc  __ for suffixes: -арайгтыт, ...

 * __LEXICON participles   __ giving 11 different participle tags: +FutPrc, +ImpPrc, ...

 * __LEXICON ptc   __ either stop or go to persprd suff

 * __LEXICON ptc2   __ either stop or go to persprd2 suff

 * __LEXICON converbs   __ listing 12 converb suffixes: -н, -жа, ...


