Multichar_Symbols

! POS
+N	     !!= * @CODE@
+V	     !!= * @CODE@
+A	     !!= * @CODE@
	     !!= * @CODE@
+Adv     !!= * @CODE@
+CC	     !!= * @CODE@
+CS	     !!= * @CODE@
+Interj  !!= * @CODE@
+Pron    !!= * @CODE@
+Num     !!= * @CODE@

! Verbal MSP
+Prs    !!= * @CODE@
+Fut    !!= * @CODE@
+Prt    !!= * @CODE@
+Prf    !!= * @CODE@
+Ind    !!= * @CODE@
+Imp    !!= * @CODE@
+Cond   !!= * @CODE@
+Opt    !!= * @CODE@
+Sg1    !!= * @CODE@
+Sg2    !!= * @CODE@
+Sg3    !!= * @CODE@
+Pl1    !!= * @CODE@
+Pl2    !!= * @CODE@
+Pl3    !!= * @CODE@
+Inf    !!= * @CODE@
+Pos    !!= * @CODE@
+Neg    !!= * @CODE@
+ConNeg !!= * @CODE@

! Nominal MSP
+Sg	    !!= * @CODE@
+Pl	    !!= * @CODE@
+Nom    !!= * @CODE@
+Acc    !!= * @CODE@
+Gen    !!= * @CODE@
+Abl    !!= * @CODE@
+Dat    !!= * @CODE@
+Ins    !!= * @CODE@
+Com    !!= * @CODE@
+Ord    !!= * @CODE@
+PxSg1  !!= * @CODE@
+PxSg2  !!= * @CODE@
+PxSg3  !!= * @CODE@
+PxPl1  !!= * @CODE@
+PxPl2  !!= * @CODE@
+PxPl3  !!= * @CODE@

%{G%} %{A%} %{J%} %{D%} %{V%}

а2 !!= * @CODE@

!! !!Flag diacritics
!! We have manually optimised the structure of our lexicon using following
!! flag diacritics to restrict morhpological combinatorics - only allow compounds
!! with verbs if the verb is further derived into a noun again:
 @P.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @D.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @C.NeedNoun@       !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
!! 
!! For languages that allow compounding, the following flag diacritics are needed
!! to control position-based compounding restrictions for nominals. Their use is
!! handled automatically if combined with +CmpN/xxx tags. If not used, they will
!! do no harm.
 @P.CmpFrst.FALSE@ !!≈ | @CODE@ | Require that words tagged as such only appear first
 @D.CmpPref.TRUE@  !!≈ | @CODE@ | Block such words from entering ENDLEX
 @P.CmpPref.FALSE@ !!≈ | @CODE@ | Block these words from making further compounds
 @D.CmpLast.TRUE@  !!≈ | @CODE@ | Block such words from entering R
 @D.CmpNone.TRUE@  !!≈ | @CODE@ | Combines with the next tag to prohibit compounding
 @U.CmpNone.FALSE@ !!≈ | @CODE@ | Combines with the prev tag to prohibit compounding
 @P.CmpOnly.TRUE@  !!≈ | @CODE@ | Sets a flag to indicate that the word has passed R
 @D.CmpOnly.FALSE@ !!≈ | @CODE@ | Disallow words coming directly from root.
!! 
!! Use the following flag diacritics to control downcasing of derived proper
!! nouns (e.g. Finnish Pariisi -> pariisilainen). See e.g. North Sámi for how to use
!! these flags. There exists a ready-made regex that will do the actual down-casing
!! given the proper use of these flags.
 @U.Cap.Obl@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.
 @U.Cap.Opt@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.

!! Key lexicon

LEXICON Root

Noun ;
!Verb ;
!Adjective ;
!Adverb ;
!Conjunction ;
!Subjunction ;
!Interjection ;
!Numeral ;
!Pronoun ;
!Postposition ;
!Punctuation ;

