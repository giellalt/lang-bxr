! Divvun & Giellatekno - open source grammars for Russia Buriat language
! Copyright © 2015 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@uit.no or feedback@divvun.no

! ========================================================================== !
!!            !!!Buryaad morphological analyser                      !
! ========================================================================== !
!! INTRODUCTION TO MORPHOLOGICAL ANALYSER OF BURYAAD.

Multichar_Symbols  !!≈ !!!Definitions for @CODE@

! POS
+N	     !!= * @CODE@ Noun 
+V	     !!= * @CODE@ Verb
+A	     !!= * @CODE@ Adjective
+Adv     !!= * @CODE@ Adverb
+CC	     !!= * @CODE@ Conjunction
+CS	     !!= * @CODE@ Subjunction
+Interj  !!= * @CODE@ Interjection
+Pron    !!= * @CODE@ Pronoun
+Num     !!= * @CODE@ Numaral

! Verbal MSP
+Prs    !!= * @CODE@ Present
+Fut    !!= * @CODE@ Future
+Prt    !!= * @CODE@ Preterite
+Prf    !!= * @CODE@ Perfect
+Ind    !!= * @CODE@ Indicative
+Imp    !!= * @CODE@ Imperative
+Cond   !!= * @CODE@ Conditional
+Opt    !!= * @CODE@ Optative
+Sg1    !!= * @CODE@ first person singular
+Sg2    !!= * @CODE@ second person singular
+Sg3    !!= * @CODE@ third person singular
+Pl1    !!= * @CODE@ first person plural
+Pl2    !!= * @CODE@ second person plural
+Pl3    !!= * @CODE@ third person plural
+Inf    !!= * @CODE@ Infinitive
+Pos    !!= * @CODE@ Positive
+Neg    !!= * @CODE@ Negative

! Nominal MSP
+Sg     !!= * @CODE@ Singular
+Pl     !!= * @CODE@ Plural
+Nom    !!= * @CODE@ Nominative
+Acc    !!= * @CODE@ Accusative
+Gen    !!= * @CODE@ Genitive
+Abl    !!= * @CODE@ Ablative
+Dat    !!= * @CODE@ Dative
+Ins    !!= * @CODE@ Instrumental
+Com    !!= * @CODE@ Comitative
+Ord    !!= * @CODE@ Ordinal
+PxSg1  !!= * @CODE@ first person singular possessive
+PxSg2  !!= * @CODE@ second person singular possessive
+PxSg3  !!= * @CODE@ third person singular possessive
+PxPl1  !!= * @CODE@ first person plural possessive
+PxPl2  !!= * @CODE@ second person plural possessive
+PxPl3  !!= * @CODE@ third person plural possessive
Px3  !!= * @CODE@ third person plural possessive

%{A%}  !!= * @CODE@ letter class 
%{D%}  !!= * @CODE@ letter class 
%{G%}  !!= * @CODE@ letter class 
%{I%}  !!= * @CODE@ letter class 
%{J%}  !!= * @CODE@ letter class 
%{U%}  !!= * @CODE@ letter class 
%{V%}  !!= * @CODE@ letter class 
%{Ө%}  !!= * @CODE@ letter class 
%{Y%}  !!= * @CODE@ kept after Cns, deleted after Vow

а2 я2 !!= * @CODE@ these are а and я in Russian loanwords that do not weaken to ых

%^END  !!= * @CODE@ we do the mhr trick to harmonise twolc and lexc

!! !!Usage tags

+Use/NG  !!= * @CODE@ Do not generate 


!! !!Flag diacritics
!! We have manually optimised the structure of our lexicon using following
!! flag diacritics to restrict morhpological combinatorics - only allow compounds
!! with verbs if the verb is further derived into a noun again:
 @P.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @D.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @C.NeedNoun@       !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
!! 
!! For languages that allow compounding, the following flag diacritics are needed
!! to control position-based compounding restrictions for nominals. Their use is
!! handled automatically if combined with +CmpN/xxx tags. If not used, they will
!! do no harm.
 @P.CmpFrst.FALSE@ !!≈ | @CODE@ | Require that words tagged as such only appear first
 @D.CmpPref.TRUE@  !!≈ | @CODE@ | Block such words from entering ENDLEX
 @P.CmpPref.FALSE@ !!≈ | @CODE@ | Block these words from making further compounds
 @D.CmpLast.TRUE@  !!≈ | @CODE@ | Block such words from entering R
 @D.CmpNone.TRUE@  !!≈ | @CODE@ | Combines with the next tag to prohibit compounding
 @U.CmpNone.FALSE@ !!≈ | @CODE@ | Combines with the prev tag to prohibit compounding
 @P.CmpOnly.TRUE@  !!≈ | @CODE@ | Sets a flag to indicate that the word has passed R
 @D.CmpOnly.FALSE@ !!≈ | @CODE@ | Disallow words coming directly from root.
!! 
!! Use the following flag diacritics to control downcasing of derived proper
!! nouns (e.g. Finnish Pariisi -> pariisilainen). See e.g. North Sámi for how to use
!! these flags. There exists a ready-made regex that will do the actual down-casing
!! given the proper use of these flags.
 @U.Cap.Obl@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.
 @U.Cap.Opt@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.

!! Key lexicon

LEXICON Root !!= __@CODE@__ is where it all starts, with these lexica:

Noun ;				   !!= * @CODE@
urj-Cyrl-ProperNouns ; !!= * @CODE@
bxr-Propernouns ;	   !!= * @CODE@
Verb ;				   !!= * @CODE@
Adjective ;			   !!= * @CODE@
Adverb ;			   !!= * @CODE@
Subjunction ;		   !!= * @CODE@
Interjection ;		   !!= * @CODE@
Pronoun ;			   !!= * @CODE@
Postposition ;		   !!= * @CODE@
Punctuation ;		   !!= * @CODE@
!Conjunction ;
!Numeral ;

