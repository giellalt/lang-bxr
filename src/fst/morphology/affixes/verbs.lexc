 !! # Buryaad verb affixes

!! This is the file for Buryaad verb morphology. The documentation
!! shortly explains the rationale behind each continuation lexicon.


!! ## The verb classes

!! ### Auxiliary verbs

!! No auxiliary verbs for now.

!! ### Ordinary verbs

!! v1 the default verb category, v2 stem in long vowel or ditphtong, 
!! v3 stem in и
!! The difference comes for the non-indicative forms, thus
!! all verb types point to the same finite_indicative.

LEXICON v1t !!= * @CODE@ the transitive v1 verbs (add +TV and go on)
+V+TV: v1lex ;
+V+TV: finite_indicative ;

LEXICON v1i !!= * @CODE@ the intransitive v1 verbs (add +IV and go on)
+V+IV: v1lex ;
+V+IV: finite_indicative ;

LEXICON v1 !!= * @CODE@ the v1 verbs not yet classified for transitivity
+V: v1lex ;
+V: finite_indicative ;

LEXICON v2t !!= * @CODE@ the transitive v2 verbs (add +TV and go on)
+V+TV: v2lex ;
+V+TV: finite_indicative ;

LEXICON v2i !!= * @CODE@ the intransitive v2 verbs (add +IV and go on)
+V+IV: v2lex ;
+V+IV: finite_indicative ;

LEXICON v2 !!= * **@CODE@** stem in long vowel or diphthong
+V: v2lex ;
+V: finite_indicative ;

LEXICON v3t !!= * @CODE@ the transitive v3 verbs (add +TV and go on)
+V+TV: v3lex ;
+V+TV: finite_indicative ;

LEXICON v3i !!= * @CODE@ the intransitive v3 verbs (add +IV and go on)
+V+IV: v3lex ;
+V+IV: finite_indicative ;


LEXICON v3 !!= * **@CODE@** stem in и
+V: v3lex ;
+V: finite_indicative ;

!! ## Verb morphology
!! We see the contlexes as two layers: The first layer to divide
!! the different stem types into different suffix lexica, and
!! the one for these suffixes.

!! ### Layer one: Dividing v1, v2, v3 into suffix lexica

LEXICON finite_indicative
+Ind+Prs:%>н%{A%} persprd ;
+Ind+Prt+Derm:%>б%{A%} persprd ;
+Ind+Prt+Conf:%>л%{A%}й persprd ;

LEXICON v1lex !!= * **@CODE@** the common v1 morphology
+Imp: imperative ;
+Vol: voluntative ;
+Opt: optative ;
+Presc: presc ; ! Prescriptive mood
 participles ;
 converbs ;

LEXICON v2lex !!= * **@CODE@** the common v2 morphology
+Imp: imperative ;
+Vol: voluntative ;
+Opt: optative ;
+Presc: presc ; 
 participles ;
 converbs ;

LEXICON v3lex
+Imp: imperative ;
+Vol: voluntative ;
+Opt: optative ;
+Presc: presc ; 
 participles ;
 converbs ;


!! ### Layer two: The suffix lexica themselves.

LEXICON persprd  !!= * **@CODE@** for suffixes: б, ш, ...
+Sg1:%>б K ;
+Sg2:%>ш  K ;
+Sg3: K ;
+Pl1:%>бди K ;
+Pl2:%>т  K ;
+Pl3: K ;

LEXICON persprd2  !!= * **@CODE@** for suffixes: би, ши, ...
+Sg1:%>би K ;
+Sg2:%>ши  K ;
+Sg3: K ;
+Pl1:%>бди K ;
+Pl2:%>та  K ;
+Pl3: K ;

!LEXICON past   !!= * __@CODE@__ for suffixes: б, 0, ...
!+Sg1:%>б K ;
!+Sg2:  K ;
!+Sg3: K ;
!+Pl1:%>б K ;
!+Pl2:  K ;
!+Pl3: K ;

LEXICON imperative   !!= * **@CODE@** for imperative suffixes (Sg2, Pl2)
+Sg2:  K ;
+Pl2:%>гты  K ;

LEXICON voluntative   !!= * **@CODE@** for suffixes: яа, 0, ...
+Sg1:%>яа K ;
+Pl1:%>й%{A%} K ;
+Pl1+Use/NG:%>й%{A%}бди K ;

LEXICON optative   !!= * **@CODE@** for suffixes: -һууб, ...
+Sg1:%>һ%{U%}%{U%}б K ;
+Pl1:%>һ%{U%}%{U%}бди K ;

LEXICON presc  !!= * **@CODE@** for suffixes: -арайгтыт, ...
+Sg2:%>%{A%}р%{A%}йгтыт K ;
+Pl2:%>%{A%}р%{A%}йгтыш K ;
+Sg2:%>ыт K ;
+Pl2:%>ыш K ;

LEXICON participles   !!= * **@CODE@** giving 11 different participle tags: +FutPrc, +ImpPrc, ...
+FutPrc:%>х%{A%}   ptc ; 
+ImpfPrc:%>%{A%}%{A%}   ptc ;
+HabPrc:%>д%{A%}г   ptc2 ;
+AgPrc:%>гш%{A%}   ptc ;
+AgConstPrc:%>%{A%}%{A%}ш%{A%}   ptc ;
+PrfPrc:%>һ%{A%}н   ptc2 ;
+PrfPrc+Pl1:%>һ%{A%}мди  # ;
+PotPrc:%>х%{A%}%{A%}р   ptc2 ;
+DualPrc:%>м%{A%}%{A%}р   ptc2 ;
+PassPrc:%>%{A%}%{A%}т%{A%}й   ptc ;
+ResPrc:%>нх%{A%}й   ptc ;

LEXICON ptc   !!= * **@CODE@** either stop or go to persprd suff
K ;
persprd ;

LEXICON ptc2   !!= * **@CODE@** either stop or go to persprd2 suff
K ;
persprd2 ;

LEXICON converbs   !!= * **@CODE@** listing 12 converb suffixes: -н, -жа, ...
+ConMod:%>н    # ;
+ConImpf:%>ж%{A%}    # ;
+ConPrf:%>%{A%}%{A%}д    # ;
+ConCond:%>б%{A%}л    # ;
+ConConc:%>б%{A%}шье    # ;
+ConTerm:%>т%{A%}р    # ;
+ConCntmp:%>мс%{A%}%{A%}р    # ;
+ConAbtmp:%>һ%{A%}%{A%}р    # ;
+ConFin:%>х%{A%}%{A%}р    # ;
+ConIntnt:%>х%{A%}й%{A%}%{A%}    # ; ! хаяа   xajaa
+ConSucc:%>х%{A%}л%{A%}%{A%}р    # ; ! халаар xalaar
+ConCmp:%>нх%{A%}ар    # ;


