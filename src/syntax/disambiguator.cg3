#!! This is the Eastern Mari disambiguation file. It chooses
#!! the correct morphological analyses in any given sentence context.

#!! The file first defines sentence delimiters and tags and sets.
#!! Thereafter come the rules, each rule is listed below.

#!! TODO: adapt it to BURYAAD


# ================ #
#!!  !!!Sentence delimiters
# ================ #

DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>" sent ;
#!! The delimiters are: "<.>" "<!>" "<?>" "<...>" "<¶>" sent

LIST DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>" "<,>" "<;>" sent ; #SASHA ADDED 30-07-2017

#PARENTHESES = "<$(>" "<$)>" "<$[>" "<$]>" "<${>" "<$}>" "<$«>" "<$»>" ;

# ============= #
# !!!Tags and sets
# ============= #

#!! The __Tags__ section lists all the tags inherited from the fst, and defines them for
#!! use in the syntactic analysis.
#!! The tags are documented in the root.lexc file, and here only listed for reference.

#!! The next section, __Sets__, contains sets defined
#!! on the basis of the tags listed here, those set names are not visible in the output.

LIST DAT-V = "куанаш" ;

LIST DAT-PO = "верч" "кӧра" ;

LIST DAT-A = "поян" "тале" "пайдале" ;

SETS

#!! !!Tags



#!! !Beginning and end of sentence

LIST BOS = (>>>) (<s>); #!! BOS
LIST EOS = (<<<) (</s>); #!! EOS

#!! !Clause boundary
LIST C-BOUNDARY = CS Rel ; #ADDED BY JEREMY AND SASHA 28-06-2017

# We define end of clause and beginning of clause in a way so that the file
# may be read both by the CG-2 and the vislcg formalisms.

#!! !Parts of speech tags

LIST N = N ;                    #!! N
LIST V = V ;                    #!! V
LIST A = A ;                    #!! A
LIST Adv = Adv ; 				#!! Adv
LIST CC = CC ; 					#!! CC
LIST CS = CS ; 					#!! CS
LIST Interj = Interj interj ij; #!! Interj
LIST Pron = Pron ; 				#!! Pron
LIST Num = Num ; 				#!! Num
LIST Pcle = Pcle ; 				#!! Pcle
LIST Clt = Clt ; 				#!! Clt
LIST Po = Po ; 					#!! Po

#!! WORD is the set of all POS
LIST WORD = N V A Adv CC CS Interj Pron Num Pcle Clt Po ;

#!! !Verbal tense and mood tags
LIST Prs = Prs ; 		 #!! Prs
LIST Prt1 = Prt1 ; 		 #!! Prt1
LIST Prt2 = Prt2 ; 		 #!! Prt2
LIST Fut = Fut ; 		 #!! Fut
LIST Imprt = Imprt ; 		 #!! Imprt
LIST Ind = Ind ind ; 		 #!! Ind
LIST Cond = Cond cond ; 	 #!! Cond
LIST Des = Des des ;		 #!! Des

#!! !Other verbal tags
LIST Act = Act ; 			 #!! Act
LIST ConNeg = ConNeg conneg; #!! ConNeg
LIST FutPrc = FutPrc ; 			 #!! FutPrc
LIST Ger = Ger ger ;		 #!! Ger
LIST Inf = Inf ; 			 #!! Inf
LIST Nec = Nec nec ;         #!! Nec
LIST Neg = Neg neg ; 		 #!! Neg
LIST NegPrc = NegPrc ; 			 #!! NegPrc
LIST Pass = Pass ; 			 #!! Pass
LIST PrfPrc = PrfPrc ; 			 #!! PrfPrc

#!! Verbal person-number tags
LIST Sg1 = Sg1 ; 			 #!! Sg1
LIST Sg2 = Sg2 ; 			 #!! Sg2
LIST Sg3 = Sg3 ; 			 #!! Sg3
LIST Pl1 = Pl1 ; 			 #!! Pl1
LIST Pl2 = Pl2 ; 			 #!! Pl2
LIST Pl3 = Pl3 ; 			 #!! Pl3

LIST Sg3Pl3 = Sg3 Pl3 ;

LIST AgPrc   =	AgPrc  ;
LIST AgConstPrc =  AgConstPrc ;
LIST DualPrc = DualPrc   ;
LIST FutPrc	 = FutPrc   ;
LIST HabPrc	 = HabPrc   ;
LIST ImpfPrc = ImpfPrc   ;
LIST PassPrc = PassPrc   ;
LIST PerfPrc = PerfPrc   ;
LIST PotPrc	 = PotPrc   ;
LIST PrsPrc	 = PrsPrc   ;
LIST ResPrc	 = ResPrc   ;


LIST AllPrc = AgPrc AgConstPrc DualPrc FutPrc HabPrc ImpfPrc PassPrc PrfPrc PotPrc PrsPrc ResPrc ; 

LIST ConImpf = ConImpf   ;
LIST ConPrf  = ConPrf   ;
LIST ConCond = ConCond     ;
LIST ConConc =  ConConc  ;
LIST ConTerm =  ConConc  ;
LIST ConCntmp =  ConCntmp ;
LIST ConAbtmp = ConAbtmp  ;
LIST ConFin  =   ConFin ;
LIST ConIntnt =  ConIntnt  ;
LIST ConSucc =  ConSucc  ;
LIST ConCmp  =  ConCmp ;
LIST ConMod = ConMod ;

#!! !Numeral tags

LIST Sg = Sg sg ; 	  #!! Sg
LIST Pl = Pl pl ; 	  #!! Pl

#!! !Case tags

LIST Nom = Nom nom ;  #!! Nom
LIST Gen = Gen gen ;  #!! Gen
LIST Abl = Abl abl ;  #!! Abl
LIST Dat = Dat dat ;  #!! Dat
LIST Com = Com com ;  #!! Com
LIST Cns = Cns cns ;  #!! Cns
LIST Acc = Acc acc ;   #!! Acc
LIST Ins = Ins ins ;   #!! Ins
LIST Ine = Ine ine ;   #!! Ine
LIST Ill = Ill ill ;   #!! Ill
LIST Cmpr = Cmpr ; 	   #!! Cmpr (case)

#!! !Other nominal tags

LIST Pers = Pers ;	   #!! Pers
LIST Refl = Refl ; 	   #!! Refl
LIST Rel = Rel ; 	   #!! Rel
LIST Interr = Interr ; #!! Interr
LIST Recipr = Recipr ; #!! Recipr
LIST Dem = Dem ;	#!! Dem
LIST ABBR = ABBR ;	  #!! ABBR
LIST Pron1Sg = "мый" "Мый" ; #SASHA ADDED 3-07-2017
LIST Pron2Sg = "тый" "Тый" ; #SASHA ADDED 3-07-2017

#!! !Adjective comparison tags

LIST Pos = Pos ; 	 #!! Pos (?)
LIST Superl = Superl ; #!! Superl
LIST Comp = Comp ; 	   #!! Comp

#!! !Possessive suffix tags

LIST PxSg1 = PxSg1 ; #!! PxSg1
LIST PxSg2 = PxSg2 ; #!! PxSg2
LIST PxSg3 = PxSg3 ; #!! PxSg3
LIST PxPl1 = PxPl1 ; #!! PxPl1
LIST PxPl2 = PxPl2 ; #!! PxPl2
LIST PxPl3 = PxPl3 ; #!! PxPl3

#!! !Numeral tags

LIST Card = Card ; #!! Card
LIST Coll = Coll ;  #!! Coll
LIST Ord = Ord ;  #!! Ord
LIST Temp = Temp ;  #!! Temp (?)

#!! !Punctuation marks

LIST CLB = CLB ; 	  #!! CLB
LIST PUNCT = PUNCT ;  #!! PUCT
LIST LEFT = LEFT ; 	  #!! LEFT
LIST RIGHT = RIGHT ;  #!! RIGHT
LIST COMMA = "," ;	  #!! COMMA

#!! !Derivation tags
LIST Der/MWN = Der/MWN ; #!! Der/MWN
LIST Der/са = Der/са ;	 #!! Der/sa

#!! !Particles
LIST Qst = Qst ; #!! Qst
LIST Foc = Foc ; #!! Foc


#!! !Tags for internal testing
LIST CmpTest = CmpTest ; #!! CmpTest
LIST Err = Err ; #!! Err

LIST @ADVL> = @ADVL> ;
LIST @>P = @>P ;
LIST @>N = @>N ;
LIST @OBJ> = @OBJ> ;
LIST @SUBJ> = SUBJ> ;
LIST @+FMAINV = @+FMAINV ;


#!! !!Sets

LIST CASE = Nom Gen Abl Dat Com Cns Acc Ins Ine Ill Cmpr ; #!! * __CASE__ = all cases
SET OBLCASE = CASE - Nom ; #!! * __OBLCASE__ = All cases except Nom
SET VFIN = Ind | Cond | Des | Imprt ; #!! * __VFIN__ = All moods

LIST WORD = N V A Adv CC CS Interj Pron Num Pcle Clt Po ;

SET PRE-N = A OR Gen OR Num OR Dem ;

SET NON-PRE-N = WORD - PRE-N ;

SET ADJ-OR-NOUN = A | N ; 

SET NOT-ADJ-OR-NOUN = WORD - ADJ-OR-NOUN ;

LIST DER-N = Der/MWN ; 
SET LEX-N = N - DER-N ;

#!! !!!Rule section


SECTION

#!! !!Early, contextless rules

#!! !!Phrase internal rules

#!! !!Verb disambituation rules

#!! !Participles

REMOVE:PrcN Sg3Pl3 IF (0 AllPrc)(1 N OR A OR Num);

#!! Plural verbforms
#!! * __BolonBusad__ and others gives plural
REMOVE:BolonBusad Sg3 IF (*-1 ("бусад") LINK -1 ("болон"));

#!! ConMod
REMOVE:NoConModAfterGen ConMod IF (-1 Gen);


SECTION

	
MAP:obj @OBJ> TARGET Acc (*1 V);
MAP:subj @SUBJ> TARGET Nom (*1 V);
MAP:vfin @+FMAINV TARGET Ind ;
