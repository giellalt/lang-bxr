! Divvun & Giellatekno - open source grammars for Sámi and other languages
! Copyright © 2000-2010 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@hum.uit.no or divvun@samediggi.no

! ===================================== !
! Phonological converter for Buryaad !
! ===================================== !

! This file tries out conversion from Sámi orthography to a phonetic
! translation based upon IPA. There is a switch at the end to get 
! SAMPA instaead

! Usage:
! make GTLANG=sma
! cat text | preprocess | lookup -flags mbTT bin/phon-sma.fst | ..


! We might also add syllable boundaries. Here the simple version:
!cat text | preprocess | lookup -flags mbTT -utf8 bin/hyphrules-sma.fst | cut -f2 | lookup -flags mbTT -utf8 bin/phon-sma.fst | cut -f2 | tr '\n' ' '  | see

! echo "dïhte lea 123" | preprocess | 
! lookup -flags mbTT -utf8 bin/sma-num.fst | cut -f2 |
! lookup -flags mbTT -utf8 bin/hyphrules-sma.fst | cut -f2 | 
! lookup -flags mbTT -utf8 bin/phon-sma.fst | cut -f2 | tr '\n' ' ' | l


echo <<defining Cns and Vow...>>


define Vow       [ А | Е | Ё | И | О | Ө | У | Ү | Ы | Э | Ю | Я |
                   а | е | ё | и | о | ө | у | ү | ы | э | ю | я |
                   a | á | e | i | o | u | y | æ | ø | å | ä | ö | 
                   A | Á | E | I | O | U | Y | Æ | Ø | Å | Ä | Ö | 
                   é | ó | ú | í | à | è | ò | ù | ì | ë | ü | ï | 
                   â | ê | ô | û | î | ã | ý |
                   É | Ó | Ú | Í | À | È | Ò | Ù | Ì | Ë | Ü | Ï | 
                   Â | Ê | Ô | Û | Î | Ã | Ý |
                   ʉ | ə ] ;

define Cns [ Б | В | Г | Д | Ж | З | Й | К | Л | М | Н | П | Р | С | Т | Ф | Х | Һ | Ц | Ч | Ш | Щ | Ь | Ъ |
	  б | в | г | д | ж | з | й | к | л | м | н | п | р | с | т | ф | х | һ | ц | ч | ш | щ | ь | ъ | 
	  b | c | č | d | đ | f | g | h | j | k | l | m | n | ŋ | 
             B | C | Č | D | Đ | F | G | H | J | K | L | M | N | Ŋ | 
             p | q | r | s | š | t | ŧ | v | w | x | z | ž |   
             P | Q | R | S | Š | T | Ŧ | V | W | X | Z | Ž | 
             ɟ | ʎ | ɲ | ʧ ] ; 

define Sgm [ Vow | Cns ] ;

define Stop [ p | t | k | c | č | ʧ ] ;

define Alv [ t | T | d | D | ŧ | Ŧ | đ | Đ | s | S | l | L | r | R | n | N ] ;

define Son [ m | n | ŋ | ɲ | l | r | j | v | đ ] ;

define Nas [ м | н ] ;


define Syll Cns* Vow+ (ː) Cns*  ;


echo << Rules>>

define down [ А -> а ,
 Б -> б ,  В -> в ,  Г -> г ,  Д -> д ,  Е -> е ,  Ё -> ё ,  Ж -> ж ,  З -> з ,  И -> и ,  
 Й -> й ,  К -> к ,  Л -> л ,  М -> м ,  Н -> н ,  О -> о ,  Ө -> ө ,  П -> п ,  Р -> р ,  
 С -> с ,  Т -> т ,  У -> у ,  Ү -> ү ,  Ф -> ф ,  Х -> х ,  Һ -> һ ,  Ц -> ц ,  Ч -> ч ,  
 Ш -> ш ,  Щ -> щ ,  Ь -> ь ,  Ы -> ы ,  Ъ -> ъ ,  Э -> э ,  Ю -> ю , Я -> я  ] ;

echo << cyr 2 ipa >>

define cyr2ipa [ а -> a ,
 б -> b ,  в -> v ,  г -> g ,  д -> d ,  е -> j e ,  ё -> j o ,  ж -> ʒ ,  з -> z ,  и -> i ,  
 й -> j ,  к -> k ,  л -> l ,  м -> m ,  н -> n ,  о -> o ,  ө -> ɵ ,  п -> p ,  р -> r ,  
 с -> s ,  т -> t ,  у -> u ,  ү -> ʊ ,  ф -> f ,  х -> χ ,  һ -> huni ,  ц -> t s ,  ч -> ʧ ,  
 ш -> ʃ ,  щ -> ʃ ˊ,  ь -> 0 ,  ы -> ɨ ,  ъ -> 0 ,  э -> e ,  ю -> j u , я -> j a ] ;


define prav1 o -> ɔ || .#. (Cns) _ ;
define prav2 n -> ŋ || _ .#. ;
define prav3 a j -> ɛ ː ;


echo << And now we go for IPA OUTPUTFORMAT >>


define COLONLENGTH   ɑ ɑ -> ɑ ː , e e -> e ː , i i -> i ː , o o -> o ː , u u -> u ː ,
                     y y -> y ː , ø ø -> ø ː , æ æ -> æ ː , ʉ ʉ -> ʉ ː , ɔ ɔ -> ɔ ː ,
                     b b -> b ː , β β -> β ː , ɸ ɸ -> ɸ ː , ɟ ɟ -> ɟ ː , c c -> c ː , 
                     d d -> d ː , ð ð -> ð ː , f f -> f ː , g g -> g ː , 
                     h h -> h ː , j j -> j ː , k k -> k ː , l l -> l ː , ʎ ʎ -> ʎ ː ,
                     m m -> m ː , n n -> n ː , ɲ ɲ -> ɲ ː , p p -> p ː , r r -> r ː , 
                     s s -> s ː , t t -> t ː , ʃ ʃ -> ʃ ː , v v -> v ː ,
                    l̥ l̥  -> l̥ ː , r̥ r̥  -> r̥ ː , m̥ m̥ -> m̥ ː , n̥ n̥ -> n̥ ː , 
                    ŋ̊ ŋ̊ -> ŋ̊ ː , v̥ v̥ -> v̥ ː ,
                     ŋ ŋ -> ŋ ː ,
                     a a -> ɑ ː ;

! Cleaning up
! define DummyDeletion Dummy -> 0 ;


echo <<Combining...>>
read regex [ 
    down 
.o. cyr2ipa
.o. prav1
.o. prav2
.o. prav3
!.o. OUTPUTFORMAT
.o. COLONLENGTH

] ;

echo <<Inverting...>>

